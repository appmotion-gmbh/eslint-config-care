module.exports = {
    parser: '@babel/eslint-parser',
    extends: 'airbnb',
    plugins: ['care'],
    rules: {
        'array-bracket-newline': ['error', 'consistent'],
        'brace-style': ['error', '1tbs', { allowSingleLine: false }],
        'camelcase': ['error', { allow: ['^UNSAFE_'] }],
        'care/chained-call-newline': ['error'],
        'care/jsx-bem': ['error'],
        'care/jsx-curly-singleline': ['error'],
        'care/jsx-dir-matches-sass-dir': ['error', { sassRoot: 'client/style' }],
        'care/jsx-multiline-element-newline': ['error'],
        'care/jsx-multiline-prop-value-newline': ['error'],
        'care/jsx-multiline-props': ['error'],
        'care/jsx-no-function-declaration-in-prop': ['error'],
        'care/jsx-no-padded-elements': ['error'],
        'care/jsx-one-element-per-line': ['error'],
        'care/jsx-root-newline': ['error'],
        'care/multiline-ternary-parens': ['error'],
        'care/no-single-line-function-declaration': ['error'],
        'care/prefer-async-await': ['error'],
        'care/react-component-name': ['error'],
        'class-methods-use-this': ['off'],
        'comma-dangle': ['error', 'always-multiline'],
        'curly': ['error', 'all'],
        'func-names': ['off'],
        'function-call-argument-newline': ['error', 'consistent'],
        'function-paren-newline': ['error', 'multiline'],
        'global-require': ['off'],
        'guard-for-in': ['off'],
        'import/extensions': ['error', 'never'],
        'import/no-dynamic-require': ['off'],
        'import/no-extraneous-dependencies': ['off'],
        'import/no-import-module-exports': ['off'],
        'import/no-named-as-default': ['off'],
        'import/prefer-default-export': ['off'],
        'indent': ['error', 4, { SwitchCase: 1 }],
        'jsx-a11y/click-events-have-key-events': ['off'],
        'jsx-a11y/label-has-associated-control': ['error', { assert: 'either' }],
        'jsx-a11y/label-has-for': ['off'],
        'jsx-a11y/media-has-caption': ['off'],
        'jsx-a11y/mouse-events-have-key-events': ['off'],
        'jsx-a11y/no-noninteractive-element-interactions': ['off'],
        'jsx-a11y/no-static-element-interactions': ['off'],
        'jsx-a11y/aria-role': ['off'],
        'max-len': ['error', { code: 140, ignoreStrings: true, ignoreTemplateLiterals: true }],
        'newline-per-chained-call': ['off'],
        'no-await-in-loop': ['off'],
        'no-constant-condition': ['off'],
        'no-continue': ['off'],
        'no-param-reassign': ['off'],
        'no-restricted-syntax': ['error', {
            selector: ':matches(FunctionExpression, FunctionDeclaration[generator!=true])',
            message: 'Use an arrow function instead.'
        }],
        'no-underscore-dangle': ['off'],
        'no-use-before-define': ['off'],
        'object-curly-newline': ['error', { consistent: true, multiline: true }],
        'object-shorthand': ['off'],
        'padding-line-between-statements': [
            'error',
            { blankLine: 'always', prev: '*', next: 'return' },
            { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*'},
            { blankLine: 'any', prev: ['const', 'let', 'var'], next: ['const', 'let', 'var']},
            { blankLine: 'always', prev: '*', next: 'block-like' },
            { blankLine: 'always', prev: 'block-like', next: '*' }
        ],
        'react/destructuring-assignment': ['error', 'never'],
        'react/forbid-prop-types': ['off'],
        'react/function-component-definition': ['error', { namedComponents: 'arrow-function' }],
        'react/jsx-curly-newline': ['error', { singleline: 'forbid' }],
        'react/jsx-curly-spacing': ['error', { when: 'never', 'children': true }],
        'react/jsx-first-prop-new-line': ['error', 'multiline'],
        'react/jsx-fragments': ['error', 'syntax'],
        'react/jsx-indent': ['error', 4],
        'react/jsx-indent-props': ['error', 4],
        'react/jsx-key': ['error'],
        'react/jsx-max-props-per-line': ['error', { when: 'always' }],
        'react/jsx-no-useless-fragment': ['error'],
        'react/jsx-one-expression-per-line': ['off'],
        'react/jsx-pascal-case': ['error'],
        'react/jsx-props-no-spreading': ['off'],
        'react/jsx-sort-props': ['error'],
        'react/jsx-wrap-multilines': ['error', {
            declaration: 'parens-new-line',
            assignment: 'parens-new-line',
            return: 'parens-new-line',
            arrow: 'parens-new-line',
            condition: 'parens-new-line',
            logical: 'parens-new-line',
            prop: 'parens-new-line'
        }],
        'react/no-array-index-key': ['off'],
        'react/no-danger': ['off'],
        'react/no-did-mount-set-state': ['off'],
        'react/no-did-update-set-state': ['off'],
        'react/no-unstable-nested-components': ['error', { allowAsProps: true }],
        'react/no-unused-prop-types': ['off'],
        'react/no-will-update-set-state': ['off'],
        'react/prefer-stateless-function': ['error'],
        'react/prop-types': ['error', { skipUndeclared: true }],
        'react/sort-comp': ['error', {
            order: ['state', 'instance-variables', 'static-methods', 'lifecycle', 'everything-else', 'render']
        }],
        'react/sort-default-props': ['error'],
        'react/sort-prop-types': ['error'],
        'react/state-in-constructor': ['off']
    }
};